createIncentivizeChatRequest.t.sol
    ├── when contract is Paused
    │   └── it REVERT - "Pausable: paused"
    └── when contract is not Paused
        ├── when amount is not more than 0
        │   └── it REVERT - InvalidArg_LessThanExpected(0, 0)
        └── when amount is sufficient (more than 0)
            ├── when push token allowance is less than amount
            │   └── it REVERT - Push::transferFrom: transfer amount exceeds spender allowance
            └── when push token allowance is enough
                ├── it should send PUSH tokens to Core
                ├── it should update chatData variables
                └── it should emit event IncentivizeChatReqInitiated(requestSender, requestReceiver, amount, block.timestamp)